# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2019-03-22 06:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='IdMatchingTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.IntegerField(verbose_name='ID сущности')),
                ('external_id', models.CharField(max_length=128, unique=True, verbose_name='ID во внешней системе')),
            ],
            options={
                'verbose_name_plural': 'Таблица соответсвий id',
            },
        ),
        migrations.CreateModel(
            name='ObjectMatchingTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_name', models.CharField(max_length=128, verbose_name='Имя таблицы')),
                ('external_name', models.CharField(max_length=128, verbose_name='Имя во внешней системе')),
            ],
            options={
                'verbose_name_plural': 'Таблица соответсвий объектов ',
            },
        ),
        migrations.CreateModel(
            name='QmsDB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('host', models.CharField(default='localhost', max_length=128, verbose_name='Адрес хоста')),
                ('user', models.CharField(default='_SYSTEM', max_length=128, verbose_name='Пользователь')),
                ('password', models.CharField(default='SYS', max_length=128, verbose_name='Пароль')),
                ('port', models.PositiveIntegerField(default=1972, verbose_name='Порт')),
                ('wsdl_port', models.PositiveIntegerField(default=57772, verbose_name='Порт wsdl')),
                ('namespace', models.CharField(default='QMS', max_length=32, verbose_name='Namespace')),
                ('db_code', models.CharField(max_length=128, verbose_name='Код основной базы данных')),
                ('coding', models.CharField(max_length=16, verbose_name='Кодировка базы данных')),
                ('cre293', models.BooleanField(default=True, verbose_name='Создавать источник финансирования?')),
                ('update_phone', models.BooleanField(default=True, verbose_name='Обновлять номер телефона пациента?')),
                ('clinic', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.Clinic', verbose_name='Мед. учреждение')),
            ],
            options={
                'verbose_name_plural': 'Базы данных QMS',
                'verbose_name': 'База данных QMS',
            },
        ),
        migrations.CreateModel(
            name='QmsDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_type', models.IntegerField(choices=[(1, 'АМБУЛАТОРНО'), (2, 'СТОМАТОЛОГИЯ')], default=1, verbose_name='Тип эпизода')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.Department')),
            ],
            options={
                'verbose_name_plural': 'Подразделения в qms',
                'verbose_name': 'Подразделение в qms',
            },
        ),
        migrations.CreateModel(
            name='QmsDepartmentCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=31, verbose_name='Код')),
                ('qmsdepartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='qmsintegration.QmsDepartment', verbose_name='Департамент')),
            ],
            options={
                'verbose_name_plural': 'Коды департаментов',
                'verbose_name': 'Код: ',
            },
        ),
        migrations.CreateModel(
            name='QmsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя пользователя')),
                ('qqc244', models.CharField(max_length=256, verbose_name='qqc пользователя')),
                ('qmsdb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmsintegration.QmsDB', verbose_name='База Qms')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.UserProfile', verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name_plural': 'Пользователи qms',
                'verbose_name': 'Пользователь qms',
            },
        ),
        migrations.AddField(
            model_name='idmatchingtable',
            name='object_matching_table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmsintegration.ObjectMatchingTable'),
        ),
        migrations.AddField(
            model_name='idmatchingtable',
            name='qmsdb',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qmsintegration.QmsDB', verbose_name='База qms'),
        ),
        migrations.AlterUniqueTogether(
            name='qmsuser',
            unique_together=set([('user_profile', 'qmsdb')]),
        ),
        migrations.AlterUniqueTogether(
            name='qmsdepartmentcode',
            unique_together=set([('qmsdepartament', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='idmatchingtable',
            unique_together=set([('internal_id', 'object_matching_table', 'qmsdb')]),
        ),
    ]
